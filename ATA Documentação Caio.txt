
------------------ 23/04 ------------------

O teste unitário é uma técnica fundamental em um processo de 
desenvolvimento de software que visa verificar o funcionamento 
correto de unidades individuais do código-fonte, como funções, 
métodos ou classes. Segundo Pressman (2016)"A realização de 
testes em nível de unidade permite que erros sejam detectados
precocemente, o que reduz significativamente o custo de correção."
aumentando a qualidade e a confiabilidade.

Segundo Sommerville(2011)"Os testes unitários têm como objetivo 
validar cada componente individual do software de forma isolada,
garantindo que ele execute corretamente suas funções previstas."
Outro aspecto importante é que os testes unitários oferecem 
maior segurança para os desenvolvedores ao realizar alterações 
no código, já que os testes automatizados indicam imediatamente 
se houve quebra de alguma funcionalidade existente. 

------------------ 05/05 ------------------

Dentre os frameworks mais utilizados para testes unitários, destacam-se
o JUnit (Java), JBehave, NUnit, xUnit, PyUnit (Python) e PHPUnit (PHP), 
que fornecem recursos robustos para a criação, execução e análise de
testes automatizados, facilitando a manutenção e a qualidade do software.

------------------ 28/04 ------------------

Um caso de uso tem como principal objetivo relatar como um sistema 
interage com os usuários ou demais sistemas externos, segundo Dennis, 
Wixom e Roth (2013) “Os casos de uso descrevem como o usuário interage com 
o sistema para realizar uma tarefa ou alcançar um objetivo específico.”
E ele oferece uma visão geral sobre as funcionalidades do sistema, 
ressaltando os principais cenários de uso e são ainda uma ferramenta 
importante para identificar e documentar as funcionalidades específicas
que o sistema precisa oferecer para seus usuários. 


------------------ 29/04 ------------------

Casos de uso descritivos


1.Abrir Chamado:

pré condição
1. Logar no sistema de gerenciamento de chamados

fluxo normal
2. Inserir informações sobre o chamado
3. Realizar abertura do chamado 
4. Sistema gera número de protocolo e salva o chamado
5. Sugestões de solução automática da IA ( caso tenha )
6a. Caso a IA encontre uma solução eficaz, chamado pode
ser encerrado imediatamente pelo funcionário
7. finalização do chamado com a solução.

pos condição
8. o funcionario pode acessar o historico de chamados dele ou
abrir um novo chamado

extend
6b. Caso a IA não resolva, encaminhar a um técnico especializado
6c. tecnico especializado propõe uma solução eficaz.

--------------------------------------------------------------

2.Atualizar e fechar chamado:

pre-condição
1. o técnico realiza o login no sistema

fluxo normal
2. visualiza os chamados que foram enviados a ele
3. Atualiza o status do atendimento realizado
4. Registra a solução
5. Define o chamado como Resolvido
6. Funcionário recebe notificação para validar a resolução
7. Chamado é fechado

pos-condição
8. Chamado é armazenado e pode ser visto no historico

extend
6a. Caso não seja eficiente, o técnico propõe outra solução eficaz

---------------------------------------------------------------

3.Cadastrar Usuário

pre-condição
1. Administrador realiza o login

fluxo normal
2. O Administrador insere todas as informações necessárias para o
cadastro (ex: nome, e-mail, CPF, perfil de acesso etc.).
3. O sistema verifica se os dados inseridos são válidos e completos.
4. O sistema cadastra o novo usuário e confirma o sucesso da operação ao Administrador.
5. O caso de uso termina.


pos-condição
6. O novo usuário está cadastrado e pode acessar o sistema conforme o perfil atribuído.

extend 
3a. O sistema detecta erro ou inconsistência nos dados 
(ex: CPF inválido, e-mail já existente, campos obrigatórios em branco).
3b. O Administrador revisa os dados com o funcionário, realiza as correções e retorna ao passo 3.
 

Documentação do processos:

OBS: Tirei dúvida com o professor sobre a documentação da matéria
dele para iniciá-la 23/04

OBS: Subi a documentação no git e validei a documentação com o professor
28/04

OBS: Ajustei a documentação, adicionei citações ( pouco de dificuldade de 
pesquisar citações ) e casos de uso descritivos, estou com um pouco de 
duvida nos casos de uso 29/04

OBS: validei a documentação com professor ( 30/04 ) sugeriu troca de um caso
de uso e demais estão corretos e adição de alguns framework usados em testes
unitarios. Fiquei com duvida no ultimo caso de uso que grupo criou para mim
modifica-lo 05/05

OBS: sanei a duvida com um dos membros do grupo para dar continuidade no caso
de uso e iniciei planilha de teste unitarios 06/05




Referencias:



(SOMMERVILLE, Ian. Engenharia de Software. 9. ed. Pearson, 2011.)

(PRESSMAN, Roger S.; MAXIM, Bruce R. Engenharia de Software: uma 
abordagem profissional. 8. ed. AMGH Editora, 2016.)

(DENNIS, Alan; WIXOM, Barbara Haley; ROTH, Roberta M. Análise e Projeto de 
Sistemas. 5. ed. Bookman, 2013.)

https://www.browserstack.com/guide/top-unit-testing-frameworks

https://medium.com/itautech/o-que-s%C3%A3o-testes-unit%C3%A1rios-e-como-execut%C3%A1-los-em-python-4d4a1b780fd6

https://www.objective.com.br/insights/teste-unitario/#

https://conceito.de/caso-de-uso#:~:text=Um%20caso%20de%20uso%20tem,os%20principais%20cen%C3%A1rios%20de%20uso.

https://flammadesign.com.br/glossario/o-que-e-casos-de-uso-importancia-e-exemplos/





